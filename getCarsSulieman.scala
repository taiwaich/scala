val rawData = sc.textFile("/user/fdm-user/car/newcar.txt")
rawData.collect.foreach(println)
println("Create the class")
case class cars(make:String, model:String, mpg:String, cylinders :String, engine_disp:String, horsepower:String, weight:String ,accelerate:String, year:String, origin:String)
println("Get the header details")
val header = rawData.first()
/* filter the header from rawData*/
val carsTable = rawData.filter(row=>row != header)
println("Car Data Without Headers")
carsTable.collect.foreach(println)
val carsData=carsTable.map(x=>x.split("\t")).map(x=>cars(x(0).toString,x(1).toString,x(2).toString,x(3).toString,x(4).toString,x(5).toString,x(6).toString,x(7).toString,x(8).toString,x(9).toString))
println("Cars By Origin")
carsData.map(x=>(x.origin,1)).reduceByKey((x,y)=>x+y).collect.foreach(println)
val americanCars=carsData.filter(x=>(x.origin=="American"))
println("American Cars")
americanCars.collect.foreach(println)
americanCars.count()
val rddcache = carsData.cache()
rddcache.toDF.show()
carsData.toDebugString
